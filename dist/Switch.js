import React from'react';import PropTypes from'prop-types';const isCaseComponent=a=>a.type.isCaseComponent,isDefaultComponent=a=>a.type.isDefaultComponent;function isAllowedChild(a){return isCaseComponent(a)||isDefaultComponent(a)}function isCaseComponents({children:a},b,c){let d=null,e=!1;return React.Children.forEach(a,a=>{isAllowedChild(a)?isDefaultComponent(a)&&(e&&(d=new Error(`${c} expected exactly one Default as a child. Received too many.`)),e=!0):d=new Error(`${c} children should be of type 'Case' or 'Default'. Received ${a.type}`)}),e||(d=new Error(`${c} expected exactly one Default as a child. Received zero.`)),d}function isMatchFor(a){return b=>b.props.match===a||b.props.test&&b.props.test(a)}const experimentalVariation=(a,b)=>a.filter(isCaseComponent).find(isMatchFor(b)),defaultVariation=a=>a.find(isDefaultComponent);export default function Switch({children:a,arg:b}){const c=React.Children.toArray(a);return React.Children.only(experimentalVariation(c,b)||defaultVariation(c))}Switch.propTypes={children:isCaseComponents,arg:PropTypes.any};